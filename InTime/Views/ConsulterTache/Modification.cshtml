@model InTime.Models.Tache
<html>
<head>
    <title>Modification</title>
    <link rel="stylesheet" href="//code.jquery.com/ui/1.11.1/themes/smoothness/jquery-ui.css">
    <script src="//code.jquery.com/jquery-1.10.2.js"></script>
    <script src="//code.jquery.com/ui/1.11.1/jquery-ui.js"></script>

    <style>
        #leftcolumn {
            width: 49.5%;
            border: 1px solid black;
            float: left;
        }

        #rightcolumn {
            width: 49.5%;
            border: 1px solid black;
            float: right;
        }
    </style>
    @{
        var tache = (InTime.Models.Tache)ViewData["Tache"];
    }

</head>
@Html.ValidationSummary("Vous devez corriger les erreurs suivantes :")
@{
    ViewBag.Title = "Ajouter une nouvelle tâche";
}
<body>
    @{
        if (ViewBag.Message == "Reussi")
        {
            <h2><font color="green">Votre tâche a été enregistrée.</font></h2>
        }
    }
@using (Html.BeginForm("Modification","ConsulterTache"))
{
    <div id="rightcolumn">
        <h2>Modifiez votre tâche</h2>
        Nom de la tâche : <br />
        @Html.TextBox("Nom", tache.NomTache, new {id = "Consultation" })
        <br />
        Nom du lieu :
        <br />
        @Html.TextBox("Lieu", tache.Lieu, new {id = "Consultation" })
        <br />
        Date : <br />
        Année :
        <input readonly id="Annee" name="Annee" width="20">

        <script>
            var annee = parseInt(@InTime.Models.ValeursSpinner.AnneeEnCours);
            $("#Annee").spinner();
            $("#Annee").spinner("option", "culture", "fr");
            $("#Annee").spinner("option", "max", parseInt(@InTime.Models.ValeursSpinner.ValeurMaximal));
            $("#Annee").spinner("option", "min", parseInt(@InTime.Models.ValeursSpinner.ValeurMinimal));
            $("#Annee").spinner("value", annee);
            $("#Annee").width(50);

            $('.ui-spinner-up').click(function () {
                if (annee != parseInt(@InTime.Models.ValeursSpinner.ValeurMaximal)) {
                    annee += 1;
                    JourDuMois();
                }
            });
            $('.ui-spinner-down').click(function () {
                if (annee != parseInt(@InTime.Models.ValeursSpinner.ValeurMinimal)) {
                    annee -= 1;
                    JourDuMois();
                }
            });
            $(selector, context).spinner("action");;
        </script>
        Mois :
        @Html.DropDownList("Mois", ViewBag.MoisAnnee as SelectList, "Choisir un mois", new { id = "Mois" })
        <script type="text/javascript">
            document.getElementById("Mois").selectedIndex = @tache.Mois
        </script>
        @Html.ValidationMessage("Mois", "*")<br />
           
        Jour :
        <select id="Jour" name="Jour"></select>
        @Html.ValidationMessage("Jour", "*")
        <br />

        Récurrence de la tache :<br />
        @Html.DropDownList("Reccurence", ViewBag.Reccurence as SelectList, new { id = "Reccurence" })
        <br />

        Heure : <br />
        Début : @Html.DropDownList("HDebut", ViewBag.trancheHeure as SelectList, "", new { id = "HDebut" })
        @Html.ValidationMessage("dbTacheHeure", "*")
        H
        @Html.DropDownList("mDebut", ViewBag.trancheMin as SelectList, "", new { id = "mDebut" })
        @Html.ValidationMessage("dbTacheMinute", "*")
        Min
        <br />
        Fin : @Html.DropDownList("HFin", ViewBag.trancheHeure as SelectList, "", new { id = "HFin" })
        @Html.ValidationMessage("finTacheHeure", "*")
        H
        @Html.DropDownList("mFin", ViewBag.trancheMin as SelectList, "", new { id = "mFin" })
        @Html.ValidationMessage("finTacheMinute", "*")
        Min
        <br />
        Avant combien de temps voulez-vous être informé de votre tâche ? <br />
        @Html.DropDownList("HRappel", ViewBag.trancheHeure as SelectList, "", new { id = "HRappel" })
        @Html.ValidationMessage("rapTacheHeure", "*")
        H
        @Html.DropDownList("mRappel", ViewBag.trancheMin as SelectList, "", new { id = "mRappel" })
        @Html.ValidationMessage("rapTacheMinute", "*")
        Min
        <br />
        Description de la tâche : <br />
        @Html.TextArea("Desc", tache.Description, new {style = "width:95%;", id = "Consultation" })
        <br />
        @Html.TextBoxFor(model => model.IdTache, new { id = "IdTache", Value = tache.IdTache,@type="Hidden" })
        <script>
                var JourDuMois = function () {
                var params = {};
                params.Year = annee;
                params.Month = $('#Mois').val();
                $.getJSON('/AjouterTache/JourDuMois/', params, function (data) {
                    var items = '<option>Choisir un jour</option>';
                    $.each(data, function (i, jour) {
                        items += "<option value='" + jour.Value + "'>" + jour.Text + "</option>";
                    });
                    $('#Jour').html(items);
                });
            }
        </script>
        @Scripts.Render("~/bundles/jquery")
        <script>
            $(function () {
                $('#Mois').change(function () {
                    JourDuMois();
                });
            });
        </script>
        <input style="float:right; margin-right:12px;" type="submit" name="Modifier" value="Modifier" />
    </div>
}
    <div id="leftcolumn">
        <h2>Voici votre tâche</h2>
        
        <p>
            <!-- To Do : Boite grise-->
            Nom de la tâche :
            <br />
            @Html.TextBox("Nom", tache.NomTache, new { disabled = "disabled", id = "Consultation" })
            <br />
            Nom du lieu :
            <br />
            @Html.TextBox("Lieu", tache.Lieu, new { disabled = "disabled", id = "Consultation" })
            <br />
            Récurrence de la tâche :
            <br />
            @Html.TextBox("Reccurence", tache.Reccurence, new { disabled = "disabled", id = "Consultation" })
            <br />
            Début  de la tâche :
            <br />
            @Html.TextBox("Debut", (string)ViewBag.DateDebut, new { disabled = "disabled", id = "Consultation" })
            <br />
            Fin de la tâche :
            <br />
            @Html.TextBox("Fin", (string)ViewBag.DateFin, new { disabled = "disabled", id = "Consultation" })
            <br />
            Rappel :
            <br />
            @Html.TextBox("Rappel", (string)ViewBag.DateRappel, new { disabled = "disabled", style = "width:95%;", id = "Consultation" })
            <br />
            Description de la tâche :
            <br />
            @Html.TextArea("Desc", tache.Description, new { disabled = "disabled", style = "width:95%;", id = "Consultation" })
            <br />
        </p>
    </div>
</body>
</html>